################################################################################
#
#   Profile
#
#   - Different configuration profiles may be encoded here to be specified
#   as parameters to the configtxgen tool
#
################################################################################
Profiles:

    OrdererGenesis:
        Capabilities:
            <<: *ChannelCapabilities
        Orderer:
            <<: *OrdererDefaults
            OrdererType: solo
            Organizations:
                - *Orderer
#                  AdminPrincipal: Role.ADMIN
#                  AdminPrincipal: Role.MEMBER
            Capabilities:
                <<: *OrdererCapabilities
        Consortiums:
            BasicConsortium:
                Organizations:
                    - *Executor
                    - *Producer
                    - *Distributor
                    - *Service
                    - *Consumer
                    - *Supervisor

    BasisChannel:
        Consortium: BasicConsortium
        Application:
            <<: *ApplicationDefaults
            Organizations:
                - *Executor
                - *Producer
                - *Distributor
                - *Service
                - *Consumer
                - *Supervisor
            Capabilities:
                <<: *ApplicationCapabilities

################################################################################
#
#   Section: Organizations
#
#   - This section defines the different organizational identities which will
#   be referenced later in the configuration.
#
################################################################################
Organizations:
    - &Orderer
        # DefaultOrg defines the organization which is used in the sampleconfig
        # of the fabric.git development environment
        Name: Orderer

        # ID to load the MSP definition as
        ID: OrdererMSP

        MSPDir: crypto-config/ordererOrganizations/orderer.prototype.rks.plus/msp

    - &Executor
        # DefaultOrg defines the organization which is used in the sampleconfig
        # of the fabric.git development environment
        Name: ExecutorMSP

        # ID to load the MSP definition as
        ID: ExecutorMSP

        MSPDir: crypto-config/peerOrganizations/executor.prototype.rks.plus/msp

        AnchorPeers:
            # AnchorPeers defines the location of peers which can be used
            # for cross org gossip communication.  Note, this value is only
            # encoded in the genesis block in the Application section context
            - Host: peer0.executor.prototype.rks.plus
              Port: 7051

    - &Producer
        Name: ProducerMSP
        ID: ProducerMSP
        MSPDir: crypto-config/peerOrganizations/producer.prototype.rks.plus/msp
        AnchorPeers:
            - Host: peer0.producer.prototype.rks.plus
              Port: 7051

    - &Distributor
        Name: DistributorMSP
        ID: DistributorMSP
        MSPDir: crypto-config/peerOrganizations/distributor.prototype.rks.plus/msp
        AnchorPeers:
            - Host: peer0.distributor.prototype.rks.plus
              Port: 7051

    - &Service
        Name: ServiceMSP
        ID: ServiceMSP
        MSPDir: crypto-config/peerOrganizations/service.prototype.rks.plus/msp
        AnchorPeers:
            - Host: peer0.service.prototype.rks.plus
              Port: 7051

    - &Consumer
        Name: ConsumerMSP
        ID: ConsumerMSP
        MSPDir: crypto-config/peerOrganizations/consumer.prototype.rks.plus/msp
        AnchorPeers:
            - Host: peer0.consumer.prototype.rks.plus
              Port: 7051

    - &Supervisor
        Name: SupervisorMSP
        ID: SupervisorMSP
        MSPDir: crypto-config/peerOrganizations/supervisor.prototype.rks.plus/msp
        AnchorPeers:
            - Host: peer0.supervisor.prototype.rks.plus
              Port: 7051

################################################################################
#
#   SECTION: Orderer
#
#   - This section defines the values to encode into a config transaction or
#   genesis block for orderer related parameters
#
################################################################################
Orderer: &OrdererDefaults

    # Orderer Type: The orderer implementation to start
    # Available types are "solo" and "kafka"
    OrdererType: solo

    Addresses:
        - orderer0.orderer.prototype.rks.plus:7050

    # Batch Timeout: The amount of time to wait before creating a batch
    BatchTimeout: 2s

    # Batch Size: Controls the number of messages batched into a block
    BatchSize:

        # Max Message Count: The maximum number of messages to permit in a batch
        MaxMessageCount: 10

        # Absolute Max Bytes: The absolute maximum number of bytes allowed for
        # the serialized messages in a batch.
        AbsoluteMaxBytes: 99 MB

        # Preferred Max Bytes: The preferred maximum number of bytes allowed for
        # the serialized messages in a batch. A message larger than the preferred
        # max bytes will result in a batch larger than preferred max bytes.
        PreferredMaxBytes: 512 KB

#    Kafka:
#        # Brokers: A list of Kafka brokers to which the orderer connects
#        # NOTE: Use IP:port notation
#        Brokers:
#            - 127.0.0.1:9092

    # Organizations is the list of orgs which are defined as participants on
    # the orderer side of the network
    Organizations:

################################################################################
#
#   SECTION: Application
#
#   - This section defines the values to encode into a config transaction or
#   genesis block for application related parameters
#
################################################################################
Application: &ApplicationDefaults

    # Organizations is the list of orgs which are defined as participants on
    # the application side of the network
    Organizations:

################################################################################
#
#   SECTION: Capabilities
#
#   - This section defines the capabilities of fabric network. This is a new
#   concept as of v1.1.0 and should not be utilized in mixed networks with
#   v1.0.x peers and orderers.  Capabilities define features which must be
#   present in a fabric binary for that binary to safely participate in the
#   fabric network.  For instance, if a new MSP type is added, newer binaries
#   might recognize and validate the signatures from this type, while older
#   binaries without this support would be unable to validate those
#   transactions.  This could lead to different versions of the fabric binaries
#   having different world states.  Instead, defining a capability for a channel
#   informs those binaries without this capability that they must cease
#   processing transactions until they have been upgraded.  For v1.0.x if any
#   capabilities are defined (including a map with all capabilities turned off)
#   then the v1.0.x peer will deliberately crash.
#
################################################################################
Capabilities:
    # Channel capabilities apply to both the orderers and the peers and must be
    # supported by both.  Set the value of the capability to true to require it.
    Global: &ChannelCapabilities
        # V1.1 for Global is a catchall flag for behavior which has been
        # determined to be desired for all orderers and peers running v1.0.x,
        # but the modification of which would cause incompatibilities.  Users
        # should leave this flag set to true.
        V1_1: true

    # Orderer capabilities apply only to the orderers, and may be safely
    # manipulated without concern for upgrading peers.  Set the value of the
    # capability to true to require it.
    Orderer: &OrdererCapabilities
        # V1.1 for Order is a catchall flag for behavior which has been
        # determined to be desired for all orderers running v1.0.x, but the
        # modification of which  would cause incompatibilities.  Users should
        # leave this flag set to true.
        V1_1: true

    # Application capabilities apply only to the peer network, and may be safely
    # manipulated without concern for upgrading orderers.  Set the value of the
    # capability to true to require it.
    Application: &ApplicationCapabilities
        # V1.1 for Application is a catchall flag for behavior which has been
        # determined to be desired for all peers running v1.0.x, but the
        # modification of which would cause incompatibilities.  Users should
        # leave this flag set to true.
        V1_1: true
